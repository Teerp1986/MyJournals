// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyJournalsAPI;

#nullable disable

namespace MyJournalsAPI.Migrations
{
    [DbContext(typeof(MyJournalDbContext))]
    [Migration("20230719235941_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.8");

            modelBuilder.Entity("MyJournalsAPI.Models.Journals", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Journals");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Journals");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("MyJournalsAPI.Models.Dietary", b =>
                {
                    b.HasBaseType("MyJournalsAPI.Models.Journals");

                    b.Property<string>("Breakfast")
                        .HasColumnType("TEXT");

                    b.Property<string>("Desert")
                        .HasColumnType("TEXT");

                    b.Property<string>("Dinner")
                        .HasColumnType("TEXT");

                    b.Property<string>("Lunch")
                        .HasColumnType("TEXT");

                    b.Property<string>("Snacks")
                        .HasColumnType("TEXT");

                    b.Property<int?>("TotalCalories")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TotalCarbohydrates")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TotalProtien")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue("Dietary");
                });

            modelBuilder.Entity("MyJournalsAPI.Models.Excercise", b =>
                {
                    b.HasBaseType("MyJournalsAPI.Models.Journals");

                    b.Property<string>("Duration")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("WorkOutType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("Excercise");
                });

            modelBuilder.Entity("MyJournalsAPI.Models.Health", b =>
                {
                    b.HasBaseType("MyJournalsAPI.Models.Journals");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("HealthIssue")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Physician")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("Health");
                });

            modelBuilder.Entity("MyJournalsAPI.Models.Personal", b =>
                {
                    b.HasBaseType("MyJournalsAPI.Models.Journals");

                    b.Property<string>("EntryTitle")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("Personal");
                });

            modelBuilder.Entity("MyJournalsAPI.Models.Travel", b =>
                {
                    b.HasBaseType("MyJournalsAPI.Models.Journals");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Duration")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.ToTable("Journals", t =>
                        {
                            t.Property("Duration")
                                .HasColumnName("Travel_Duration");
                        });

                    b.HasDiscriminator().HasValue("Travel");
                });
#pragma warning restore 612, 618
        }
    }
}
